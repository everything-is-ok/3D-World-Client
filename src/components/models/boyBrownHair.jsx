/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import PropTypes from "prop-types";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import * as THREE from "three";

function BoyBrownHair({ ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("models/boyBrownHair.glb");
  const { actions } = useAnimations(animations, group);

  const { position } = props;
  const vec = new THREE.Vector3(...position);

  useEffect(() => {
    actions.Run.play();
  }, []);

  useFrame(() => {
    if (!group.current) {
      return;
    }

    group.current.position.lerp(vec, 0.05);
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <primitive object={nodes.Bone} />
      <skinnedMesh
        geometry={nodes.Cube004.geometry}
        material={materials.Skin}
        skeleton={nodes.Cube004.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Cube004_1.geometry}
        material={materials.Jacket}
        skeleton={nodes.Cube004_1.skeleton}
      />
      <skinnedMesh geometry={nodes.Cube004_2.geometry} material={materials.Top} skeleton={nodes.Cube004_2.skeleton} />
      <skinnedMesh geometry={nodes.Cube004_3.geometry} material={materials.Scarf} skeleton={nodes.Cube004_3.skeleton} />
      <skinnedMesh
        geometry={nodes.Cube004_4.geometry}
        material={materials.HatBrown}
        skeleton={nodes.Cube004_4.skeleton}
      />
      <skinnedMesh geometry={nodes.Cube004_5.geometry} material={materials.Pants} skeleton={nodes.Cube004_5.skeleton} />
      <skinnedMesh geometry={nodes.Cube004_6.geometry} material={materials.Face} skeleton={nodes.Cube004_6.skeleton} />
      <skinnedMesh geometry={nodes.Cube004_7.geometry} material={materials.Hair} skeleton={nodes.Cube004_7.skeleton} />
    </group>
  );
}

BoyBrownHair.propTypes = {
  user: PropTypes.object,
  socket: PropTypes.object,
  position: PropTypes.array,
};

export default BoyBrownHair;

useGLTF.preload("models/boyBrownHair.glb");
